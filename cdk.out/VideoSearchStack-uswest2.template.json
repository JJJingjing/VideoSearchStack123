{
 "Description": "Video Search application deployed in us-west-2",
 "Resources": {
  "VideoSearchVPC4D959582": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/Resource"
   }
  },
  "VideoSearchVPCpublicSubnet1SubnetDBC39DD7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/Subnet"
   }
  },
  "VideoSearchVPCpublicSubnet1RouteTable55EAEF88": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/RouteTable"
   }
  },
  "VideoSearchVPCpublicSubnet1RouteTableAssociation8186A827": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VideoSearchVPCpublicSubnet1RouteTable55EAEF88"
    },
    "SubnetId": {
     "Ref": "VideoSearchVPCpublicSubnet1SubnetDBC39DD7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/RouteTableAssociation"
   }
  },
  "VideoSearchVPCpublicSubnet1DefaultRoute1E01FE62": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VideoSearchVPCIGWAD58DA19"
    },
    "RouteTableId": {
     "Ref": "VideoSearchVPCpublicSubnet1RouteTable55EAEF88"
    }
   },
   "DependsOn": [
    "VideoSearchVPCVPCGWE6FB1511"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/DefaultRoute"
   }
  },
  "VideoSearchVPCpublicSubnet1EIP5D250DCB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/EIP"
   }
  },
  "VideoSearchVPCpublicSubnet1NATGateway4B1F590E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VideoSearchVPCpublicSubnet1EIP5D250DCB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VideoSearchVPCpublicSubnet1SubnetDBC39DD7"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VideoSearchVPCpublicSubnet1DefaultRoute1E01FE62",
    "VideoSearchVPCpublicSubnet1RouteTableAssociation8186A827"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet1/NATGateway"
   }
  },
  "VideoSearchVPCpublicSubnet2SubnetF8DA52F4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2/Subnet"
   }
  },
  "VideoSearchVPCpublicSubnet2RouteTableD49A705F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2/RouteTable"
   }
  },
  "VideoSearchVPCpublicSubnet2RouteTableAssociation74A0F952": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VideoSearchVPCpublicSubnet2RouteTableD49A705F"
    },
    "SubnetId": {
     "Ref": "VideoSearchVPCpublicSubnet2SubnetF8DA52F4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2/RouteTableAssociation"
   }
  },
  "VideoSearchVPCpublicSubnet2DefaultRoute6E61BD44": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VideoSearchVPCIGWAD58DA19"
    },
    "RouteTableId": {
     "Ref": "VideoSearchVPCpublicSubnet2RouteTableD49A705F"
    }
   },
   "DependsOn": [
    "VideoSearchVPCVPCGWE6FB1511"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/publicSubnet2/DefaultRoute"
   }
  },
  "VideoSearchVPCprivateSubnet1Subnet5F479BC4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1/Subnet"
   }
  },
  "VideoSearchVPCprivateSubnet1RouteTableFCDFEE30": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1/RouteTable"
   }
  },
  "VideoSearchVPCprivateSubnet1RouteTableAssociation7B35B3EE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VideoSearchVPCprivateSubnet1RouteTableFCDFEE30"
    },
    "SubnetId": {
     "Ref": "VideoSearchVPCprivateSubnet1Subnet5F479BC4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1/RouteTableAssociation"
   }
  },
  "VideoSearchVPCprivateSubnet1DefaultRoute67A97842": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VideoSearchVPCpublicSubnet1NATGateway4B1F590E"
    },
    "RouteTableId": {
     "Ref": "VideoSearchVPCprivateSubnet1RouteTableFCDFEE30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet1/DefaultRoute"
   }
  },
  "VideoSearchVPCprivateSubnet2Subnet9E34012A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2/Subnet"
   }
  },
  "VideoSearchVPCprivateSubnet2RouteTable175DE6E3": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2/RouteTable"
   }
  },
  "VideoSearchVPCprivateSubnet2RouteTableAssociation9B77301E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VideoSearchVPCprivateSubnet2RouteTable175DE6E3"
    },
    "SubnetId": {
     "Ref": "VideoSearchVPCprivateSubnet2Subnet9E34012A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2/RouteTableAssociation"
   }
  },
  "VideoSearchVPCprivateSubnet2DefaultRoute6F577B58": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VideoSearchVPCpublicSubnet1NATGateway4B1F590E"
    },
    "RouteTableId": {
     "Ref": "VideoSearchVPCprivateSubnet2RouteTable175DE6E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/privateSubnet2/DefaultRoute"
   }
  },
  "VideoSearchVPCIGWAD58DA19": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "VideoSearchStack-uswest2/VideoSearchVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/IGW"
   }
  },
  "VideoSearchVPCVPCGWE6FB1511": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VideoSearchVPCIGWAD58DA19"
    },
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/VPCGW"
   }
  },
  "VideoSearchVPCRestrictDefaultSecurityGroupCustomResourceF4D765E2": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VideoSearchVPC4D959582",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "396913724635"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-west-2:396913724635:security-group/",
             {
              "Fn::GetAtt": [
               "VideoSearchVPC4D959582",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474",
    "aws:asset:property": "Code"
   }
  },
  "UnifiedBucket6D2F2B07": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "POST"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "ETag",
        "Content-Length",
        "Content-Type",
        "Content-Range",
        "Accept-Ranges"
       ],
       "MaxAge": 3600
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:frontend:9ebbbc94",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:frontend:c35dbd0f",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:video-input/:e9ef584a",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:video-output/:6af6e2e2",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/UnifiedBucket/Resource"
   }
  },
  "UnifiedBucketPolicy1742B947": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UnifiedBucket6D2F2B07",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UnifiedBucket6D2F2B07",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "CloudFrontOAI9EBF49FD",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UnifiedBucket6D2F2B07",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UnifiedBucket6D2F2B07",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "CloudFrontOAI9EBF49FD",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UnifiedBucket6D2F2B07",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/UnifiedBucket/Policy/Resource"
   }
  },
  "UnifiedBucketAutoDeleteObjectsCustomResourceB25AB732": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    }
   },
   "DependsOn": [
    "UnifiedBucketPolicy1742B947"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/UnifiedBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "UnifiedBucketNotifications6699DB8D": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "NotificationConfiguration": {
     "EventBridgeConfiguration": {}
    },
    "Managed": true
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/UnifiedBucket/Notifications/Resource"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "5194f926380567b6fdffc61629afdad2afc818614cb227df45e499c69db163a7.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "UnifiedBucket6D2F2B07"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.5194f926380567b6fdffc61629afdad2afc818614cb227df45e499c69db163a7",
    "aws:asset:property": "Code"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "CloudFrontOAI9EBF49FD": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "OAI for video search frontend"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CloudFrontOAI/Resource"
   }
  },
  "VideoSearchApi5765AE97": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for searching video content",
    "Name": "Video Search API"
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Resource"
   }
  },
  "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for searching video content",
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    }
   },
   "DependsOn": [
    "VideoSearchApiOPTIONS9270A71F",
    "VideoSearchApisearchOPTIONSEEC72E4B",
    "VideoSearchApisearchPOST982C7870",
    "VideoSearchApisearch914F80DE"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Deployment/Resource"
   }
  },
  "VideoSearchApiDeploymentStageprodF55F1597": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/DeploymentStage.prod/Resource"
   }
  },
  "VideoSearchApiOPTIONS9270A71F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'86400'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "VideoSearchApi5765AE97",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/OPTIONS/Resource"
   }
  },
  "VideoSearchApisearch914F80DE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VideoSearchApi5765AE97",
      "RootResourceId"
     ]
    },
    "PathPart": "search",
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/search/Resource"
   }
  },
  "VideoSearchApisearchOPTIONSEEC72E4B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'86400'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "VideoSearchApisearch914F80DE"
    },
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/search/OPTIONS/Resource"
   }
  },
  "VideoSearchApisearchPOSTApiPermissionVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearchBBC21FB4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SearchVideoFunction94253CC5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:396913724635:",
       {
        "Ref": "VideoSearchApi5765AE97"
       },
       "/",
       {
        "Ref": "VideoSearchApiDeploymentStageprodF55F1597"
       },
       "/POST/search"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/search/POST/ApiPermission.VideoSearchStackuswest2VideoSearchApiFDF50E4A.POST..search"
   }
  },
  "VideoSearchApisearchPOSTApiPermissionTestVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearch4CFD8064": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SearchVideoFunction94253CC5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:396913724635:",
       {
        "Ref": "VideoSearchApi5765AE97"
       },
       "/test-invoke-stage/POST/search"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/search/POST/ApiPermission.Test.VideoSearchStackuswest2VideoSearchApiFDF50E4A.POST..search"
   }
  },
  "VideoSearchApisearchPOST982C7870": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SearchVideoFunction94253CC5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "VideoSearchApisearch914F80DE"
    },
    "RestApiId": {
     "Ref": "VideoSearchApi5765AE97"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchApi/Default/search/POST/Resource"
   }
  },
  "VideoInputCorsPolicyB13C5E8F": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "CorsConfig": {
      "AccessControlAllowCredentials": false,
      "AccessControlAllowHeaders": {
       "Items": [
        "*"
       ]
      },
      "AccessControlAllowMethods": {
       "Items": [
        "GET",
        "HEAD",
        "OPTIONS"
       ]
      },
      "AccessControlAllowOrigins": {
       "Items": [
        "*"
       ]
      },
      "AccessControlMaxAgeSec": 3600,
      "OriginOverride": true
     },
     "Name": "VideoSearchStackuswest2VideoInputCorsPolicyF77FB811"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoInputCorsPolicy/Resource"
   }
  },
  "VideoOutputCorsPolicyDF2325DA": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "CorsConfig": {
      "AccessControlAllowCredentials": false,
      "AccessControlAllowHeaders": {
       "Items": [
        "*"
       ]
      },
      "AccessControlAllowMethods": {
       "Items": [
        "GET",
        "HEAD",
        "OPTIONS"
       ]
      },
      "AccessControlAllowOrigins": {
       "Items": [
        "*"
       ]
      },
      "AccessControlMaxAgeSec": 3600,
      "OriginOverride": true
     },
     "Name": "VideoSearchStackuswest2VideoOutputCorsPolicyF3FC5F17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoOutputCorsPolicy/Resource"
   }
  },
  "FrontendDistributionE6EAF405": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "PathPattern": "video-input/*",
       "ResponseHeadersPolicyId": {
        "Ref": "VideoInputCorsPolicyB13C5E8F"
       },
       "TargetOriginId": "VideoSearchStackuswest2FrontendDistributionOrigin279AB29CD",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS"
       ],
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "PathPattern": "video-output/*",
       "ResponseHeadersPolicyId": {
        "Ref": "VideoOutputCorsPolicyDF2325DA"
       },
       "TargetOriginId": "VideoSearchStackuswest2FrontendDistributionOrigin35FFF629E",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
       "Compress": true,
       "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
       "PathPattern": "api/*",
       "TargetOriginId": "VideoSearchStackuswest2FrontendDistributionOrigin466CCCE42",
       "ViewerProtocolPolicy": "https-only"
      }
     ],
     "CustomErrorResponses": [
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "VideoSearchStackuswest2FrontendDistributionOrigin1F402E664",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "UnifiedBucket6D2F2B07",
         "RegionalDomainName"
        ]
       },
       "Id": "VideoSearchStackuswest2FrontendDistributionOrigin1F402E664",
       "OriginPath": "/frontend",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "CloudFrontOAI9EBF49FD"
           }
          ]
         ]
        }
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "UnifiedBucket6D2F2B07",
         "RegionalDomainName"
        ]
       },
       "Id": "VideoSearchStackuswest2FrontendDistributionOrigin279AB29CD",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "CloudFrontOAI9EBF49FD"
           }
          ]
         ]
        }
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "UnifiedBucket6D2F2B07",
         "RegionalDomainName"
        ]
       },
       "Id": "VideoSearchStackuswest2FrontendDistributionOrigin35FFF629E",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "CloudFrontOAI9EBF49FD"
           }
          ]
         ]
        }
       }
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "VideoSearchApi5765AE97"
          },
          ".execute-api.us-west-2.amazonaws.com"
         ]
        ]
       },
       "Id": "VideoSearchStackuswest2FrontendDistributionOrigin466CCCE42",
       "OriginPath": "/prod"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/FrontendDistribution/Resource"
   }
  },
  "VideoDataClusterSubnetsC2901E96": {
   "Type": "AWS::DocDB::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for VideoDataCluster database",
    "SubnetIds": [
     {
      "Ref": "VideoSearchVPCprivateSubnet1Subnet5F479BC4"
     },
     {
      "Ref": "VideoSearchVPCprivateSubnet2Subnet9E34012A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataCluster/Subnets"
   }
  },
  "VideoDataClusterSecurityGroup46B8CE36": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "DocumentDB security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataCluster/SecurityGroup/Resource"
   }
  },
  "VideoDataClusterSecurityGroupfromVideoSearchStackuswest2LambdaSecurityGroupF86A90F727017109E3211": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from VideoSearchStackuswest2LambdaSecurityGroupF86A90F7:27017",
    "FromPort": 27017,
    "GroupId": {
     "Fn::GetAtt": [
      "VideoDataClusterSecurityGroup46B8CE36",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LambdaSecurityGroup0BD9FC99",
      "GroupId"
     ]
    },
    "ToPort": 27017
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataCluster/SecurityGroup/from VideoSearchStackuswest2LambdaSecurityGroupF86A90F7:27017"
   }
  },
  "VideoDataCluster21C22DC5": {
   "Type": "AWS::DocDB::DBCluster",
   "Properties": {
    "DBClusterParameterGroupName": {
     "Ref": "VideoDataClusterParams"
    },
    "DBSubnetGroupName": {
     "Ref": "VideoDataClusterSubnetsC2901E96"
    },
    "DeletionProtection": false,
    "EnableCloudwatchLogsExports": [
     "audit",
     "profiler"
    ],
    "EngineVersion": "5.0.0",
    "MasterUserPassword": "Password123",
    "MasterUsername": "username123",
    "StorageEncrypted": true,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VideoDataClusterSecurityGroup46B8CE36",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataCluster/Resource"
   }
  },
  "VideoDataClusterInstance1D76F76F5": {
   "Type": "AWS::DocDB::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "VideoDataCluster21C22DC5"
    },
    "DBInstanceClass": "db.t3.medium"
   },
   "DependsOn": [
    "VideoSearchVPCprivateSubnet1DefaultRoute67A97842",
    "VideoSearchVPCprivateSubnet1RouteTableAssociation7B35B3EE",
    "VideoSearchVPCprivateSubnet2DefaultRoute6F577B58",
    "VideoSearchVPCprivateSubnet2RouteTableAssociation9B77301E"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataCluster/Instance1"
   }
  },
  "VideoDataClusterParams": {
   "Type": "AWS::DocDB::DBClusterParameterGroup",
   "Properties": {
    "Description": "Custom parameter group for Video Search application",
    "Family": "docdb5.0",
    "Parameters": {
     "tls": "disabled"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoDataClusterParams"
   }
  },
  "VideoSearchLambdaRole364B22E0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchLambdaRole/Resource"
   }
  },
  "VideoSearchLambdaRoleDefaultPolicy21938B05": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock-data-automation-runtime:*",
        "bedrock-data-automation:*",
        "bedrock-runtime:*",
        "bedrock:*",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UnifiedBucket6D2F2B07",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UnifiedBucket6D2F2B07",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-west-2:396913724635:secret:/video-search/docdb/masteruser-??????"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "Roles": [
     {
      "Ref": "VideoSearchLambdaRole364B22E0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoSearchLambdaRole/DefaultPolicy/Resource"
   }
  },
  "LambdaSecurityGroup0BD9FC99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Lambda functions",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VideoSearchVPC4D959582"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/LambdaSecurityGroup/Resource"
   }
  },
  "PythonDependenciesLayerE0D42248": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "3642174deb8b7355035f5eb27a85d19cbea9b0d6558b0bc6caae20f72c240068.zip"
    },
    "Description": "Python dependencies for Lambda functions"
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/PythonDependenciesLayer/Resource",
    "aws:asset:path": "asset.3642174deb8b7355035f5eb27a85d19cbea9b0d6558b0bc6caae20f72c240068",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "SearchVideoFunction94253CC5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "62f75a7456f08e29733f331e93cfbedf45c954cdd8de7350c66ac28317b8a838.zip"
    },
    "Environment": {
     "Variables": {
      "DB_ENDPOINT": {
       "Fn::GetAtt": [
        "VideoDataCluster21C22DC5",
        "Endpoint"
       ]
      },
      "DB_PORT": "27017",
      "DB_USERNAME": "username123",
      "DB_PASSWORD": "Password123",
      "DB_NAME": "VideoData",
      "COLLECTION_NAME": "videodata",
      "DEPLOY_REGION": "us-west-2",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "Handler": "search_video.lambda_handler",
    "Layers": [
     {
      "Ref": "PythonDependenciesLayerE0D42248"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "VideoSearchLambdaRole364B22E0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "LambdaSecurityGroup0BD9FC99",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VideoSearchVPCprivateSubnet1Subnet5F479BC4"
      },
      {
       "Ref": "VideoSearchVPCprivateSubnet2Subnet9E34012A"
      }
     ]
    }
   },
   "DependsOn": [
    "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "VideoSearchLambdaRole364B22E0",
    "VideoSearchVPCprivateSubnet1DefaultRoute67A97842",
    "VideoSearchVPCprivateSubnet1RouteTableAssociation7B35B3EE",
    "VideoSearchVPCprivateSubnet2DefaultRoute6F577B58",
    "VideoSearchVPCprivateSubnet2RouteTableAssociation9B77301E"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/SearchVideoFunction/Resource",
    "aws:asset:path": "asset.62f75a7456f08e29733f331e93cfbedf45c954cdd8de7350c66ac28317b8a838",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ExtractVideoDataFunction0C66DF26": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "ff04d153cb0f3da189fdc5c96e0880ac0dbab3299f40b9de02cc574af58a9eaa.zip"
    },
    "Environment": {
     "Variables": {
      "DB_ENDPOINT": {
       "Fn::GetAtt": [
        "VideoDataCluster21C22DC5",
        "Endpoint"
       ]
      },
      "DB_PORT": "27017",
      "DB_USERNAME": "username123",
      "DB_PASSWORD": "Password123",
      "DB_NAME": "VideoData",
      "COLLECTION_NAME": "videodata",
      "DEPLOY_REGION": "us-west-2",
      "LOG_LEVEL": "DEBUG",
      "BUCKET_NAME": {
       "Ref": "UnifiedBucket6D2F2B07"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "PythonDependenciesLayerE0D42248"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "VideoSearchLambdaRole364B22E0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "LambdaSecurityGroup0BD9FC99",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VideoSearchVPCprivateSubnet1Subnet5F479BC4"
      },
      {
       "Ref": "VideoSearchVPCprivateSubnet2Subnet9E34012A"
      }
     ]
    }
   },
   "DependsOn": [
    "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "VideoSearchLambdaRole364B22E0",
    "VideoSearchVPCprivateSubnet1DefaultRoute67A97842",
    "VideoSearchVPCprivateSubnet1RouteTableAssociation7B35B3EE",
    "VideoSearchVPCprivateSubnet2DefaultRoute6F577B58",
    "VideoSearchVPCprivateSubnet2RouteTableAssociation9B77301E"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/ExtractVideoDataFunction/Resource",
    "aws:asset:path": "asset.ff04d153cb0f3da189fdc5c96e0880ac0dbab3299f40b9de02cc574af58a9eaa",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateBDAProjectFunctionDCAE43D8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "2b55c197692bd2efb1230410a4816d15e13ef37b34a8573eb306f4dadbd85c7b.zip"
    },
    "Environment": {
     "Variables": {
      "PROJECT_NAME": "VideoDataProject",
      "DEPLOY_REGION": "us-west-2"
     }
    },
    "Handler": "create_bda_project.lambda_handler",
    "Layers": [
     {
      "Ref": "PythonDependenciesLayerE0D42248"
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "VideoSearchLambdaRole364B22E0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "VideoSearchLambdaRole364B22E0"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CreateBDAProjectFunction/Resource",
    "aws:asset:path": "asset.2b55c197692bd2efb1230410a4816d15e13ef37b34a8573eb306f4dadbd85c7b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BDAProjectProviderframeworkonEventServiceRole1DC9429D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BDAProjectProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "BDAProjectProviderframeworkonEventServiceRoleDefaultPolicyA0853361": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CreateBDAProjectFunctionDCAE43D8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CreateBDAProjectFunctionDCAE43D8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BDAProjectProviderframeworkonEventServiceRoleDefaultPolicyA0853361",
    "Roles": [
     {
      "Ref": "BDAProjectProviderframeworkonEventServiceRole1DC9429D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BDAProjectProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BDAProjectProviderframeworkonEventE9BF32C3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (VideoSearchStack-uswest2/BDAProjectProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "CreateBDAProjectFunctionDCAE43D8",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "BDAProjectProviderframeworkonEventServiceRole1DC9429D",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "BDAProjectProviderframeworkonEventServiceRoleDefaultPolicyA0853361",
    "BDAProjectProviderframeworkonEventServiceRole1DC9429D"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BDAProjectProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BDAProject": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BDAProjectProviderframeworkonEventE9BF32C3",
      "Arn"
     ]
    },
    "Timestamp": "2025-03-24T02:40:03.414Z"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/BDAProject/Default"
   }
  },
  "TriggerVideoDataAutomationFunctionEF8A166B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "ea3d7ee3d805b273d0b627a7b7cb4ea41481fe3c4b2eaa102d72433d89080996.zip"
    },
    "Environment": {
     "Variables": {
      "BDA_RUNTIME_ENDPOINT": "https://bedrock-data-automation-runtime.us-west-2.amazonaws.com",
      "DATA_PROJECT_NAME": "VideoDataProject",
      "TARGET_BUCKET_NAME": {
       "Ref": "UnifiedBucket6D2F2B07"
      },
      "DEPLOY_REGION": "us-west-2"
     }
    },
    "Handler": "index.lambda_handler",
    "Layers": [
     {
      "Ref": "PythonDependenciesLayerE0D42248"
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "VideoSearchLambdaRole364B22E0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "VideoSearchLambdaRole364B22E0"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/TriggerVideoDataAutomationFunction/Resource",
    "aws:asset:path": "asset.ea3d7ee3d805b273d0b627a7b7cb4ea41481fe3c4b2eaa102d72433d89080996",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InitDbFunction67777D6B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "18ff47c0cd15e50f3ed26a849acdaf0d4ffe00a2bfdae97fd7fda6d467509455.zip"
    },
    "Environment": {
     "Variables": {
      "DB_ENDPOINT": {
       "Fn::GetAtt": [
        "VideoDataCluster21C22DC5",
        "Endpoint"
       ]
      },
      "DB_PORT": "27017",
      "DB_USERNAME": "username123",
      "DB_PASSWORD": "Password123",
      "DB_NAME": "VideoData",
      "COLLECTION_NAME": "videodata",
      "DEPLOY_REGION": "us-west-2",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "Handler": "init_db.lambda_handler",
    "Layers": [
     {
      "Ref": "PythonDependenciesLayerE0D42248"
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "VideoSearchLambdaRole364B22E0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 600,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "LambdaSecurityGroup0BD9FC99",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VideoSearchVPCprivateSubnet1Subnet5F479BC4"
      },
      {
       "Ref": "VideoSearchVPCprivateSubnet2Subnet9E34012A"
      }
     ]
    }
   },
   "DependsOn": [
    "VideoSearchLambdaRoleDefaultPolicy21938B05",
    "VideoSearchLambdaRole364B22E0",
    "VideoSearchVPCprivateSubnet1DefaultRoute67A97842",
    "VideoSearchVPCprivateSubnet1RouteTableAssociation7B35B3EE",
    "VideoSearchVPCprivateSubnet2DefaultRoute6F577B58",
    "VideoSearchVPCprivateSubnet2RouteTableAssociation9B77301E"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/InitDbFunction/Resource",
    "aws:asset:path": "asset.18ff47c0cd15e50f3ed26a849acdaf0d4ffe00a2bfdae97fd7fda6d467509455",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DbInitializerProviderframeworkonEventServiceRole88DDED68": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "VideoDataClusterInstance1D76F76F5",
    "VideoDataCluster21C22DC5",
    "VideoDataClusterSecurityGroupfromVideoSearchStackuswest2LambdaSecurityGroupF86A90F727017109E3211",
    "VideoDataClusterSecurityGroup46B8CE36",
    "VideoDataClusterSubnetsC2901E96"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DbInitializerProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "DbInitializerProviderframeworkonEventServiceRoleDefaultPolicy5A937A68": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "InitDbFunction67777D6B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InitDbFunction67777D6B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DbInitializerProviderframeworkonEventServiceRoleDefaultPolicy5A937A68",
    "Roles": [
     {
      "Ref": "DbInitializerProviderframeworkonEventServiceRole88DDED68"
     }
    ]
   },
   "DependsOn": [
    "VideoDataClusterInstance1D76F76F5",
    "VideoDataCluster21C22DC5",
    "VideoDataClusterSecurityGroupfromVideoSearchStackuswest2LambdaSecurityGroupF86A90F727017109E3211",
    "VideoDataClusterSecurityGroup46B8CE36",
    "VideoDataClusterSubnetsC2901E96"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DbInitializerProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DbInitializerProviderframeworkonEvent13A4E169": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (VideoSearchStack-uswest2/DbInitializerProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "InitDbFunction67777D6B",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "DbInitializerProviderframeworkonEventServiceRole88DDED68",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "DbInitializerProviderframeworkonEventServiceRoleDefaultPolicy5A937A68",
    "DbInitializerProviderframeworkonEventServiceRole88DDED68",
    "VideoDataClusterInstance1D76F76F5",
    "VideoDataCluster21C22DC5",
    "VideoDataClusterSecurityGroupfromVideoSearchStackuswest2LambdaSecurityGroupF86A90F727017109E3211",
    "VideoDataClusterSecurityGroup46B8CE36",
    "VideoDataClusterSubnetsC2901E96"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DbInitializerProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DbInitializer": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "DbInitializerProviderframeworkonEvent13A4E169",
      "Arn"
     ]
    },
    "Timestamp": "2025-03-24T02:40:03.418Z"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DbInitializer/Default"
   }
  },
  "DeployFrontendStaticAwsCliLayerB3ECAD50": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "DependsOn": [
    "FrontendDistributionE6EAF405",
    "UnifiedBucketAutoDeleteObjectsCustomResourceB25AB732",
    "UnifiedBucketNotifications6699DB8D",
    "UnifiedBucketPolicy1742B947",
    "UnifiedBucket6D2F2B07",
    "VideoSearchApiOPTIONS9270A71F",
    "VideoSearchApisearchOPTIONSEEC72E4B",
    "VideoSearchApisearchPOSTApiPermissionTestVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearch4CFD8064",
    "VideoSearchApisearchPOSTApiPermissionVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearchBBC21FB4",
    "VideoSearchApisearchPOST982C7870",
    "VideoSearchApisearch914F80DE",
    "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c",
    "VideoSearchApiDeploymentStageprodF55F1597",
    "VideoSearchApi5765AE97"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DeployFrontendStatic/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployFrontendStaticCustomResource1024MiB2048MiB75C70504": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiB98A3C176",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-396913724635-us-west-2"
    ],
    "SourceObjectKeys": [
     "9be925984badfbcb628a013d0c42170398d5d842a1ab84bbb85b97df700387d2.zip"
    ],
    "DestinationBucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "DestinationBucketKeyPrefix": "frontend",
    "RetainOnDelete": false,
    "Prune": true,
    "DistributionId": {
     "Ref": "FrontendDistributionE6EAF405"
    },
    "DistributionPaths": [
     "/*"
    ]
   },
   "DependsOn": [
    "FrontendDistributionE6EAF405",
    "UnifiedBucketAutoDeleteObjectsCustomResourceB25AB732",
    "UnifiedBucketNotifications6699DB8D",
    "UnifiedBucketPolicy1742B947",
    "UnifiedBucket6D2F2B07",
    "VideoSearchApiOPTIONS9270A71F",
    "VideoSearchApisearchOPTIONSEEC72E4B",
    "VideoSearchApisearchPOSTApiPermissionTestVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearch4CFD8064",
    "VideoSearchApisearchPOSTApiPermissionVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearchBBC21FB4",
    "VideoSearchApisearchPOST982C7870",
    "VideoSearchApisearch914F80DE",
    "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c",
    "VideoSearchApiDeploymentStageprodF55F1597",
    "VideoSearchApi5765AE97"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DeployFrontendStatic/CustomResource-1024MiB-2048MiB/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRole3D247CAC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiB/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRoleDefaultPolicy0E2BB108": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-396913724635-us-west-2",
        "arn:aws:s3:::cdk-hnb659fds-assets-396913724635-us-west-2/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UnifiedBucket6D2F2B07",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UnifiedBucket6D2F2B07",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRoleDefaultPolicy0E2BB108",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRole3D247CAC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiB/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiB98A3C176": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "EphemeralStorage": {
     "Size": 2048
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployFrontendStaticAwsCliLayerB3ECAD50"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRole3D247CAC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRoleDefaultPolicy0E2BB108",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiBServiceRole3D247CAC"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB2048MiB/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DeployFrontendConfigAwsCliLayerD1D43F42": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "DependsOn": [
    "FrontendDistributionE6EAF405",
    "VideoSearchApiOPTIONS9270A71F",
    "VideoSearchApisearchOPTIONSEEC72E4B",
    "VideoSearchApisearchPOSTApiPermissionTestVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearch4CFD8064",
    "VideoSearchApisearchPOSTApiPermissionVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearchBBC21FB4",
    "VideoSearchApisearchPOST982C7870",
    "VideoSearchApisearch914F80DE",
    "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c",
    "VideoSearchApiDeploymentStageprodF55F1597",
    "VideoSearchApi5765AE97"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DeployFrontendConfig/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployFrontendConfigCustomResource512MiB1024MiBF184EE04": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB439D638D",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-396913724635-us-west-2"
    ],
    "SourceObjectKeys": [
     "bf763bcea4e79a46a7af79eb883a7b74aa617130c234174bd6c61c38eb734094.zip"
    ],
    "SourceMarkers": [
     {
      "<<marker:0xbaba:0>>": {
       "Ref": "VideoSearchApi5765AE97"
      },
      "<<marker:0xbaba:1>>": {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      },
      "<<marker:0xbaba:2>>": {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      }
     }
    ],
    "DestinationBucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "DestinationBucketKeyPrefix": "frontend",
    "Prune": false,
    "DistributionId": {
     "Ref": "FrontendDistributionE6EAF405"
    },
    "DistributionPaths": [
     "/config.js"
    ]
   },
   "DependsOn": [
    "FrontendDistributionE6EAF405",
    "VideoSearchApiOPTIONS9270A71F",
    "VideoSearchApisearchOPTIONSEEC72E4B",
    "VideoSearchApisearchPOSTApiPermissionTestVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearch4CFD8064",
    "VideoSearchApisearchPOSTApiPermissionVideoSearchStackuswest2VideoSearchApiFDF50E4APOSTsearchBBC21FB4",
    "VideoSearchApisearchPOST982C7870",
    "VideoSearchApisearch914F80DE",
    "VideoSearchApiDeploymentD7B844E381bab745adae671ec3b0eaa3b765647c",
    "VideoSearchApiDeploymentStageprodF55F1597",
    "VideoSearchApi5765AE97"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/DeployFrontendConfig/CustomResource-512MiB-1024MiB/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRole5F7A526E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRoleDefaultPolicy5878A191": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-396913724635-us-west-2",
        "arn:aws:s3:::cdk-hnb659fds-assets-396913724635-us-west-2/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UnifiedBucket6D2F2B07",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UnifiedBucket6D2F2B07",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRoleDefaultPolicy5878A191",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRole5F7A526E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB439D638D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "EphemeralStorage": {
     "Size": 1024
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployFrontendConfigAwsCliLayerD1D43F42"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRole5F7A526E",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRoleDefaultPolicy5878A191",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiBServiceRole5F7A526E"
   ],
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateVideoFoldersAwsCliLayer520C670B": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CreateVideoFolders/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "CreateVideoFoldersCustomResource512MiB1024MiB187B3A58": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB439D638D",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-396913724635-us-west-2"
    ],
    "SourceObjectKeys": [
     "af7f48d7f75e4dfd2bacb6424ec3d3c282041c5ce7c86689608d0c592c40da5a.zip"
    ],
    "SourceMarkers": [
     {}
    ],
    "DestinationBucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "DestinationBucketKeyPrefix": "video-input/",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CreateVideoFolders/CustomResource-512MiB-1024MiB/Default"
   }
  },
  "CreateVideoOutputFolderAwsCliLayerE6D19E20": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-396913724635-us-west-2",
     "S3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CreateVideoOutputFolder/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "CreateVideoOutputFolderCustomResource512MiB1024MiB873C6E54": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB1024MiB439D638D",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-396913724635-us-west-2"
    ],
    "SourceObjectKeys": [
     "1c4950e6f77c93fb69db2b6e74599e9f611fc0419524ce8e17334e1cd8988e7c.zip"
    ],
    "SourceMarkers": [
     {}
    ],
    "DestinationBucketName": {
     "Ref": "UnifiedBucket6D2F2B07"
    },
    "DestinationBucketKeyPrefix": "video-output/",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CreateVideoOutputFolder/CustomResource-512MiB-1024MiB/Default"
   }
  },
  "VideoUploadRule4AF2BB35": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.s3"
     ],
     "detail-type": [
      "Object Created"
     ],
     "detail": {
      "bucket": {
       "name": [
        {
         "Ref": "UnifiedBucket6D2F2B07"
        }
       ]
      },
      "object": {
       "key": [
        {
         "prefix": "video-input/"
        }
       ]
      }
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "TriggerVideoDataAutomationFunctionEF8A166B",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoUploadRule/Resource"
   }
  },
  "VideoUploadRuleAllowEventRuleVideoSearchStackuswest2TriggerVideoDataAutomationFunctionFF14619020D6F2E5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TriggerVideoDataAutomationFunctionEF8A166B",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "VideoUploadRule4AF2BB35",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/VideoUploadRule/AllowEventRuleVideoSearchStackuswest2TriggerVideoDataAutomationFunctionFF146190"
   }
  },
  "S3VideoDataExtractRuleE929C67C": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.s3"
     ],
     "detail-type": [
      "Object Created"
     ],
     "detail": {
      "bucket": {
       "name": [
        {
         "Ref": "UnifiedBucket6D2F2B07"
        }
       ]
      },
      "object": {
       "key": [
        {
         "wildcard": "video-output/*/result.json"
        }
       ]
      }
     }
    },
    "Name": "s3-video-data-extract",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "ExtractVideoDataFunction0C66DF26",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/S3VideoDataExtractRule/Resource"
   }
  },
  "S3VideoDataExtractRuleAllowEventRuleVideoSearchStackuswest2ExtractVideoDataFunction647AA94D28DBE81E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ExtractVideoDataFunction0C66DF26",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "S3VideoDataExtractRuleE929C67C",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/S3VideoDataExtractRule/AllowEventRuleVideoSearchStackuswest2ExtractVideoDataFunction647AA94D"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TwW7bMAz9lt4VbUsPQ49OsnYBttVIhlwDWWZTNbJkiFKCwPC/j5Icuy2CnfhIPolPz/ScPzzwb3fijDNZH2daVbzbeiGPjEr7DuScd7tWsuWL2ZVLVoZKK7kNlQEfaxPa2ODhr6g0TPWpViBaqYRX1ozkCH6syxj+CP8kPJzFhZVOnQhOF6+NB0f4SshKhqzwpPW1AePZFmRwyl+enA1t0vDfwtocHCD2DO95twjymKcNKIfS0mMvU3nIc7IQCD1TouHdxuZXpzgdyqhnUttQvzhrPO+enTooU0hJs9c16SY9kbuMnMfIucnYALbWIPwEUYPDacbtxkqhd6oKV7/f5z0TrTpk+0g6oC9aNVyV4ApabS/J03h0ymgvDvnrJkB8G5yEaAT7Df7V1rE5oGt3uDnhnmnRVLXgXXQHXKMQo8Jf4gJuR/IHuR/yx2Dk9R0j3ipz0ODtWOlZbWVNy7sSXlSkaKkD0uKkJyzyNo2LsFp86K4NemGy1LFVCicaIJBOxTXZdwIRPPIiBlaPxvC8EJNTPYMTBSR7w7AZFPv+nSk0wza3PPrUKp09KfqyLA2NxtPLI/85+DZ4JhN77wY68vFAtnqvo5d7+pmlVrw441KrZG/PjK2Bv+GX0/yef+df795QqZkLtHAN8E2O/wAK2HqaHwQAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "VideoSearchStack-uswest2/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VideoSearchApiEndpoint20082B77": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VideoSearchApi5765AE97"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VideoSearchApiDeploymentStageprodF55F1597"
      },
      "/"
     ]
    ]
   }
  },
  "FrontendURL": {
   "Description": "URL for the frontend application",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "UnifiedBucketName": {
   "Description": "S3 bucket for video input, output, and frontend hosting",
   "Value": {
    "Ref": "UnifiedBucket6D2F2B07"
   }
  },
  "CloudFrontURL": {
   "Description": "CloudFront URL for the frontend application",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "DocumentDBEndpoint": {
   "Description": "DocumentDB cluster endpoint",
   "Value": {
    "Fn::GetAtt": [
     "VideoDataCluster21C22DC5",
     "Endpoint"
    ]
   }
  },
  "ApiEndpoint": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VideoSearchApi5765AE97"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VideoSearchApiDeploymentStageprodF55F1597"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}